buildscript {
    ext {
        springBootVersion = '3.3.4'
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.11")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


plugins {
    id 'application'
    id 'checkstyle'
    id 'jacoco'
    id 'pmd'
    id 'com.github.ben-manes.versions' version '0.51.0'
    id "info.solidsoft.pitest" version '1.15.0'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.owasp.dependencycheck' version '10.0.4'
    id 'org.sonarqube' version '5.1.0.4882'
    id "org.flywaydb.flyway" version "9.22.3"
    id 'maven-publish'
    id 'uk.gov.hmcts.java' version '0.12.63'
}

apply plugin: 'java-library'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'project-report'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

def versions = [
        logback            : '1.5.11',
        gradlePitest       : '1.15.0',
        pitest             : '1.17.1',
        reformLogging      : '6.1.9',
        serenity           : '4.2.6',
        camel              : '4.8.1',
        jackson            : '2.18.1',
        log4j              : '2.24.2'
]


mainClassName = 'uk.gov.hmcts.reform.*'
def jarName = 'data-ingestion-lib.jar'
def gitRepo = "https://github.com/hmcts/data-ingestion-lib"

def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "http://www.opensource.org/licenses/mit-license.php"
            distribution "repo"
        }
    }

    scm {
        url "https://github.com/hmcts/data-ingestion-lib"
    }
}

def buildNumber = System.getenv("RELEASE_VERSION")?.replace("refs/tags/", "") ?: "DEV-SNAPSHOT"

group = 'com.github.hmcts'
version = buildNumber

task sourcesJar(type: Jar, dependsOn: classes) {
    getArchiveClassifier().set('sources')
    from sourceSets.main.allSource
}


artifacts {
    archives sourcesJar
    //archives javadocJar
}

publishing {
    publications {
        Main(MavenPublication) {
            from components.java
            artifact sourcesJar
            //artifact javadocJar
            groupId project.group
            artifactId 'data-ingestion-lib'
            version project.version
        }
    }
    repositories {
        maven {
            name = "AzureArtifacts"
            url = uri("https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1")
            credentials {
                username = System.getenv("AZURE_DEVOPS_ARTIFACT_USERNAME")
                password = System.getenv("AZURE_DEVOPS_ARTIFACT_TOKEN")
            }
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation' << "-Xlint:unchecked"
}

compileTestJava {
    options.compilerArgs << '-Xlint:deprecation' << "-Xlint:unchecked"
}

sourceSets {

    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }

    functionalTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }

    smokeTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }
}

idea {
    module {
        testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
        testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.java.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.resources.srcDirs
        testSourceDirs += project.sourceSets.smokeTest.java.srcDirs
        testSourceDirs += project.sourceSets.smokeTest.resources.srcDirs
    }
}

configurations.all {
    exclude group: 'org.apache.groovy', module: 'groovy'
    exclude group: 'org.apache.groovy', module: 'groovy-xml'
    exclude group: 'org.apache.groovy', module: 'groovy-json'
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
    functionalTestImplementation.extendsFrom testImplementation
    functionalTestRuntime.extendsFrom testRuntime

}
check.dependsOn jacocoTestCoverageVerification

pmd {
    toolVersion = '6.12.0'
    ignoreFailures = true
    sourceSets = [sourceSets.main, sourceSets.test, sourceSets.integrationTest, sourceSets.functionalTest, sourceSets.smokeTest]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSets = [
            'category/java/errorprone.xml',
            'category/java/bestpractices.xml'
    ]
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {

    systemProperty "scenario", System.getProperty('scenario')

    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    finalizedBy aggregate
}

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
}

task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
    baselineOnMigrate = true
    if (project.hasProperty("dburl")) {
        url = "jdbc:postgresql://${dburl}"
    }
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    executionData(test, integration)
    reports {
        xml.required = true
        csv.required = false
        xml.outputLocation = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}


pitest {
    targetClasses = ['uk.gov.hmcts.reform.juddata.*']
    testSourceSets = [sourceSets.test, sourceSets.integrationTest]
    excludedClasses = [
            'uk.gov.hmcts.reform.juddata.configuration.*',
            'uk.gov.hmcts.reform.juddata.JudicialApplication',
            'uk.gov.hmcts.reform.juddata.camel.service.EmailData',
            'uk.gov.hmcts.reform.juddata.camel.service.EmailService'
    ]
    threads = 10
    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation = 'build/reports/pitest/fastermutationtestingoutput'
    outputFormats = ['XML', 'HTML']
    timestampedReports = true
    mutationThreshold = 90
    useClasspathFile = true
}


project.tasks['pitest'].group = "Verification"

sonarqube {
    properties {
        property "sonar.projectName", "RD :: Judicial Reference Data load"
        property "sonar.projectKey", "JUDDATA"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.jacoco.itReportPath", "${project.buildDir}/jacoco/integration.exec"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"

        property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/juddata/configuration/**," +
                "src/main/java/uk/gov/hmcts/reform/juddata/JudicialApplication.java"
    }
}

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport
project.tasks['sonarqube'].group = "Verification"

repositories {
    mavenLocal()

    maven {
        url 'https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1'
    }

    mavenCentral()
}

dependencies {
    implementation (group: 'org.springframework.boot', name: 'spring-boot-starter-json') {
        exclude group: 'org.glassfish', module: 'jakarta.el'
    }
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'

    implementation (group: 'org.springframework.boot', name: 'spring-boot-starter-cache'){
        exclude group: 'org.glassfish', module: 'jakarta.el'
    }
    implementation (group: 'org.springframework.boot', name: 'spring-boot-starter-mail') {
        exclude group: 'org.glassfish', module: 'jakarta.el'
    }

    api group: 'org.springframework.boot', name: 'spring-boot-starter-batch'

    implementation group: 'org.springframework', name: 'spring-core'
    implementation group: 'org.springframework', name: 'spring-beans'
    implementation group: 'org.springframework', name: 'spring-aop'
    implementation group: 'org.springframework', name: 'spring-aspects'
    implementation group: 'org.springframework', name: 'spring-context'
    implementation group: 'org.springframework', name: 'spring-context-support'
    implementation group: 'org.springframework', name: 'spring-expression'
    implementation group: 'org.springframework', name: 'spring-jcl'
    implementation group: 'org.springframework', name: 'spring-jdbc'
    implementation group: 'org.springframework', name: 'spring-orm'
    implementation group: 'org.springframework', name: 'spring-tx'
    implementation group: 'org.springframework', name: 'spring-web'
    implementation group: 'org.springframework', name: 'spring-webmvc'

    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.0.4'
    implementation (group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jackson)
    implementation (group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.jackson)
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.jackson
    implementation group: 'com.fasterxml.jackson', name: 'jackson-bom', version: versions.jackson, ext: 'pom'

    implementation (group: 'commons-fileupload', name: 'commons-fileupload') {
        version {
            strictly '1.5'
        }
    }
    implementation group: 'io.github.openfeign.form', name: 'feign-form', version: '3.8.0'
    implementation (group: 'io.github.openfeign.form', name: 'feign-form-spring', version: '3.8.0') {
        exclude group: 'commons-io', module: 'commons-io'
    }

    implementation group: 'com.sun.xml.bind', name: 'jaxb-osgi', version: '2.3.9'

    implementation "com.github.hmcts.java-logging:logging:${versions.reformLogging}"
    implementation "com.github.hmcts.java-logging:logging-appinsights:${versions.reformLogging}"
    implementation ('com.github.hmcts:service-auth-provider-java-client:5.3.2') {
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-openfeign-core'
    }
    implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: '5.8.5'

    implementation group: 'com.azure', name: 'azure-storage-blob', version: '12.24.0'

    implementation group: 'org.springframework.security', name: 'spring-security-core', version: '5.8.15'
    implementation group: 'org.bouncycastle', name: 'bcpkix-jdk18on', version: '1.79'

    implementation group: 'org.flywaydb', name: 'flyway-core', version: '5.2.4'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.4'

    implementation group: 'com.google.guava', name: 'guava', version: '32.0.0-jre'

    implementation group: 'org.apache.commons', name: 'commons-vfs2', version: '2.4.1'
    implementation group: 'com.jcraft', name: 'jsch', version: '0.1.55'

    implementation 'commons-io:commons-io:2.18.0'

    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

    api group: 'org.apache.camel.springboot', name: 'camel-spring-boot-starter', version:versions.camel
    implementation group: 'org.apache.camel', name: 'camel-csv', version: versions.camel
    implementation group: 'org.apache.camel', name: 'camel-sql', version: versions.camel
    api group: 'org.apache.camel', name: 'camel-spring-batch', version: versions.camel
    testImplementation group: 'org.apache.camel', name: 'camel-test-spring', version: '3.22.2'


    api group: 'org.apache.camel.springboot', name: 'camel-azure-storage-blob-starter', version:versions.camel
    // api group: 'org.apache.camel.springboot', name: 'camel-azure-storage-queue-starter', version:versions.camel
    api group: 'org.apache.camel.springboot', name: 'camel-bindy-starter', version:versions.camel
    implementation group: 'org.apache.camel.springboot', name: 'camel-jdbc-starter', version:versions.camel
    implementation group: 'org.apache.camel', name: 'camel-bean-validator', version: versions.camel
    implementation group: 'org.apache.camel.springboot', name: 'camel-spring-boot-starter', version: versions.camel

    implementation group: 'org.apache.camel', name: 'camel-core', version: versions.camel
    implementation group: 'org.apache.camel', name: 'spi-annotations', version: versions.camel

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: versions.log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: versions.log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j', version: versions.log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: versions.log4j

    implementation group: 'ch.qos.logback', name: 'logback-core', version: versions.logback
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback
    implementation 'net.logstash.logback:logstash-logback-encoder:8.0'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-config-server', version: '4.1.4'

    implementation group: 'com.opencsv', name: 'opencsv', version: '3.7'
    api group: 'commons-lang', name: 'commons-lang', version: '2.6'
    api group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation 'com.sendgrid:sendgrid-java:4.10.3'

    implementation group: 'jakarta.el', name: 'jakarta.el-api', version: '5.0.0'
    implementation group: 'org.glassfish.expressly', name: 'expressly', version: '5.0.0'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    integrationTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testImplementation (group: 'io.rest-assured', name: 'rest-assured', version: '4.5.1') {
        exclude group: "com.sun.xml.bind", module: "jaxb-osgi"
    }
    testImplementation("org.hamcrest:hamcrest-junit:2.0.0.0") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
        exclude group: "org.hamcrest", module: "hamcrest-library"
    }

    testImplementation group: 'com.h2database', name: 'h2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.4.6'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.4.6'
    testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation group: 'org.springframework.batch', name: 'spring-batch-test', version: '4.2.4.RELEASE'

    testImplementation group: 'org.pitest', name: 'pitest', version: versions.pitest
    testImplementation 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.3.0'
    testImplementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'


    testImplementation group: 'org.apache.camel', name: 'camel-test-spring-junit5', version: versions.camel
    testImplementation group: 'org.apache.camel', name: 'camel-test-junit5', version: versions.camel
    testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.20.4'
    testImplementation group: 'org.postgresql', name: 'postgresql', version: '42.7.4'

    integrationTestImplementation group: 'org.apache.camel', name: 'camel-test-spring-junit5', version: versions.camel
    integrationTestImplementation group: 'org.apache.camel', name: 'camel-test-junit5', version: versions.camel
    integrationTestImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.20.4'
    integrationTestImplementation group: 'org.postgresql', name: 'postgresql', version: '42.7.4'

    testImplementation(group: 'org.yaml', name: 'snakeyaml', version: '2.3')

    integrationTestImplementation(group: 'org.yaml', name: 'snakeyaml', version: '2.3')

    functionalTestImplementation(group: 'org.yaml', name: 'snakeyaml', version: '2.3')

    integrationTestImplementation sourceSets.main.runtimeClasspath
    integrationTestImplementation sourceSets.test.runtimeClasspath

    functionalTestImplementation sourceSets.main.runtimeClasspath
    functionalTestImplementation sourceSets.test.runtimeClasspath

    smokeTestImplementation sourceSets.main.runtimeClasspath
    smokeTestImplementation sourceSets.test.runtimeClasspath
}

dependencyCheck {
    suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

gradle.startParameter.continueOnFailure = true


bootJar {
    enabled = false
}


tasks.jar {
    enabled = true
    // Remove `plain` postfix from jar file name
    archiveClassifier.set("")
}
// this is required to force Java running on the Azure Windows Server OS into using
// UTF-8 as the default character set instead of windows-1252 which causes issues.
// this setting only applies when running via gradle bootRun -- see web.config for the
// java flag that configures the deployed applications
applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]

tasks.named("bootDistZip").configure { dependsOn("jar")}
tasks.named("bootDistTar").configure { dependsOn("jar")}
tasks.named("bootStartScripts").configure { dependsOn("jar")}

test {
    useJUnitPlatform()
}

